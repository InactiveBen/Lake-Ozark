---
interface Props {
  name: string;
  title: string;
  image?: string;
  bio: string;
  showPhoto?: boolean;
}

const { name, title, image, bio, showPhoto = true } = Astro.props;
---

<div class="bg-white rounded-2xl shadow-lg overflow-hidden">
  {showPhoto ? (
    <div class="aspect-[3/4] bg-gray-200">
      <img 
        src={image} 
        alt={name}
        class="w-full h-full object-cover"
        onerror="this.src='/placeholder-staff.jpg'"
      />
    </div>
  ) : (
    <div class="aspect-[3/4] bg-gradient-to-br from-brand/10 to-brand/20 flex items-center justify-center p-6">
      <div class="text-center">
        <div class="w-24 h-24 bg-brand/10 rounded-full mx-auto mb-4 flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-brand/60" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
        </div>
        <p class="text-brand-dark/70 italic text-sm">
Photo Unavailable
        </p>
      </div>
    </div>
  )}
  <div class="p-6">
    <h2 class="text-xl font-bold mb-2">{name}</h2>
    <p class="text-gray-600 mb-4">{title}</p>
    <button
      class="bg-brand text-white px-4 py-2 rounded-full hover:bg-brand-dark transition w-full"
      onclick={`showStaffBio(${JSON.stringify({ name, title, image, bio, showPhoto })})`}
    >
      Learn more
    </button>
  </div>
</div> 
