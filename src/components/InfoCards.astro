---
export interface Card {
  icon: string;
  title: string;
  subtitle?: string;
  description?: string;
  iconPath: string;
}

export interface Props {
  title: string;
  subtitle: string;
  description: string;
  badge: string;
  cards: Card[];
  gridCols?: string;
}

const { 
  title, 
  subtitle, 
  description, 
  badge, 
  cards, 
  gridCols = "sm:grid-cols-3" 
} = Astro.props;
---

<section class="py-20 bg-white">
  <div class="container mx-auto px-6">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-16">
        <span class="inline-block px-4 py-2 bg-brand/10 text-brand text-sm font-medium mb-4">
          {badge}
        </span>
        <h2 class="text-4xl lg:text-5xl font-light mb-6 text-gray-900">{title}</h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          {description}
        </p>
      </div>
      
      <div class={`grid ${gridCols} gap-8 max-w-6xl mx-auto`}>
        {cards.map((card) => (
          <div class="text-center p-8">
            <div class="w-16 h-16 bg-brand/10 rounded-full flex items-center justify-center mx-auto mb-6">
              <svg class="w-8 h-8 text-brand" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <Fragment set:html={card.iconPath} />
              </svg>
            </div>
            <h3 class="text-2xl font-semibold mb-2 text-gray-900">{card.title}</h3>
            {card.subtitle && (
              <p class="text-lg font-light text-gray-700 mb-4">{card.subtitle}</p>
            )}
            {card.description && (
              <p class="text-sm text-gray-600">{card.description}</p>
            )}
          </div>
        ))}
      </div>
    </div>
  </div>
</section>
