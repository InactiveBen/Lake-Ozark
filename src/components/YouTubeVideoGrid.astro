---
interface Video {
  id: string;
  title: string;
  customThumbnail?: string;
}

interface Props {
  videos: Video[];
}

const { videos } = Astro.props;
---

<div class="space-y-8">
  <div class="grid md:grid-cols-3 gap-8" id="video-grid">
    {videos.map((video, index) => (
      <div class="video-item" style={index >= 3 ? "display: none;" : ""}>
        <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
          <a 
            href={`https://www.youtube.com/watch?v=${video.id}`}
            target="_blank"
            rel="noopener noreferrer"
            class="block group"
            aria-label={`Watch ${video.title} on YouTube (opens in new tab)`}
          >
            <div class="relative aspect-video">
              <img 
                src={video.customThumbnail || `https://img.youtube.com/vi/${video.id}/maxresdefault.jpg`}
                alt={`Thumbnail for ${video.title}`}
                class="w-full h-full object-cover"
              />
              <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition flex items-center justify-center">
                <span class="sr-only">Play video</span>
                <svg class="w-16 h-16 text-white" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </div>
            </div>
            <div class="p-4">
              <h3 class="font-semibold group-hover:text-brand transition">{video.title}</h3>
            </div>
          </a>
        </div>
      </div>
    ))}
  </div>

  {videos.length > 3 && (
    <div class="text-center">
      <button
        id="view-more-btn"
        class="bg-brand hover:bg-brand-dark text-white px-8 py-3 rounded-full transition transform hover:scale-105"
      >
        View More Services
      </button>
    </div>
  )}
</div>

<script>
  function setupVideoGrid() {
    const grid = document.getElementById('video-grid');
    const viewMoreBtn = document.getElementById('view-more-btn');
    const videos = Array.from(grid?.querySelectorAll('.video-item') || []);
    let expanded = false;

    if (!grid || !viewMoreBtn || videos.length <= 3) return;

    viewMoreBtn.addEventListener('click', () => {
      if (!expanded) {
        // Show all videos with a fade-in effect
        videos.slice(3).forEach(video => {
          (video as HTMLElement).style.display = 'block';
          (video as HTMLElement).style.opacity = '0';
          requestAnimationFrame(() => {
            (video as HTMLElement).style.transition = 'opacity 0.3s ease-in-out';
            (video as HTMLElement).style.opacity = '1';
          });
        });
        viewMoreBtn.textContent = 'Show Less';
      } else {
        // Hide videos beyond the first 3
        videos.slice(3).forEach(video => {
          (video as HTMLElement).style.display = 'none';
        });
        viewMoreBtn.textContent = 'View More Services';
      }
      expanded = !expanded;
    });
  }

  // Setup on page load
  setupVideoGrid();
  // Setup on client-side navigation
  document.addEventListener('astro:page-load', setupVideoGrid);
</script>
